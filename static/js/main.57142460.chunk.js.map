{"version":3,"sources":["Components/Logo.js","Firebase.js","Servises/Auth.js","Components/SignInButton.js","Actions/Index.js","Containers/Navbar.js","Containers/CreatePost.js","Components/Comments.js","Components/CreateComment.js","Components/UpdateCaption.js","Containers/Post.js","Pages/Home.js","App.js","reportWebVitals.js","Reducers/userReducer.js","Reducers/Index.js","Store.js","index.js"],"names":["Logo","className","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","storage","provider","GoogleAuthProvider","SignInWithGoogle","a","signInWithPopup","then","res","user","catch","err","console","log","message","SignInButton","dispatch","useDispatch","signInClick","name","displayName","pic","photoURL","email","verified","emailVerified","type","Payload","onClick","Navbar","useSelector","state","userReducer","drop","document","getElementById","style","display","alt","id","src","window","location","reload","CreatePost","timestamp","FieldValue","serverTimestamp","useState","caption","setCaption","img","setImg","setProgress","placeholder","value","onChange","e","target","htmlFor","files","imgURL","URL","createObjectURL","uploadedImg","imgId","characters","randomstring","i","rnum","Math","floor","random","length","substring","randomString","ref","put","on","snapshot","pro","round","bytesTransferred","totalBytes","error","child","getDownloadURL","imgUrl","collection","add","Name","ProfileUrl","Email","PhotoUrl","Caption","createdAt","Comments","props","comments","setComments","useEffect","doc","orderBy","onSnapshot","querySnapshot","forEach","data","docs","map","Comment","com","CreateComment","comment","setComment","cursor","UpdateCaption","update","Post","setPosts","posts","toggleUpdate","setToggleUpdate","post","delete","Home","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initial","action","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.57142460.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className=\"logo\">\r\n            <h3>PUBLIC</h3>\r\n            <p>Blogging</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo\r\n"," import firebase from 'firebase'\r\n\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyBT5FM96vDG4JHtfjmA5GcoA5FEhJyCWyQ\",\r\n    authDomain: \"publicblogging-e3071.firebaseapp.com\",\r\n    projectId: \"publicblogging-e3071\",\r\n    storageBucket: \"publicblogging-e3071.appspot.com\",\r\n    messagingSenderId: \"560278651669\",\r\n    appId: \"1:560278651669:web:a985f28057c7f1321d9f1c\"\r\n  };\r\n  \r\n  const firebaseApp=firebase.initializeApp(firebaseConfig);\r\n\r\n  const db=firebaseApp.firestore();\r\n  const auth=firebaseApp.auth();\r\n  const storage=firebaseApp.storage();\r\n  const provider=new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {db,auth,storage,provider} ;","import { auth,provider } from \"../Firebase\";\r\n\r\nconst SignInWithGoogle=async ()=>{\r\n    let user;\r\n    await auth.signInWithPopup(provider).then((res)=>{\r\n        user=res.user;\r\n    }).catch((err)=>{\r\n        console.log(err.message);\r\n    })\r\n\r\n    return user;\r\n}\r\nconst SignOutFromGoogle=async ()=>{\r\n    let LogOut;\r\n    await auth.signOut().then((res)=>{\r\n        LogOut=true;\r\n    }).catch((err)=>{\r\n        console.log(err.message);\r\n    })\r\n\r\n    return LogOut;\r\n}\r\n\r\nexport {SignInWithGoogle,SignOutFromGoogle};","import React from 'react'\r\nimport './style.css'\r\nimport {SignInWithGoogle} from '../Servises/Auth'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addUser } from '../Actions/Index'\r\n\r\nconst SignInButton = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const signInClick=async ()=>{\r\n        const user=await SignInWithGoogle();\r\n        if(user){\r\n           \r\n            console.log(user);\r\n            dispatch(addUser(user.displayName,user.photoURL,user.email,user.emailVerified));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"signInButton\" onClick={signInClick}>\r\n            <p>SignIn with Google</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignInButton\r\n","export const addUser=(name,pic,email,verified)=>{\r\n    return{\r\n        type:'ADD',\r\n        Payload:{\r\n            name:name,\r\n            pic:pic,\r\n            email:email,\r\n            verified:verified\r\n        }\r\n    }   \r\n}","import React from 'react'\r\nimport Logo from '../Components/Logo'\r\nimport SignInButton from '../Components/SignInButton'\r\nimport './style.css'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Navbar = () => {\r\n    //const [user, setUser] = useState()\r\n    const user = useSelector(state => state.userReducer.user[0]);\r\n    function toggleDrop(){\r\n        var drop=document.getElementById(\"dropDown\");\r\n        if(drop.style.display===\"block\")\r\n            drop.style.display=\"none\";\r\n        else\r\n            drop.style.display=\"block\";\r\n    }\r\n    return (\r\n        \r\n        <div className=\"navbar\">\r\n            <Logo/>\r\n            {(user)?<div className=\"proImg btn\" onClick={toggleDrop}><img alt=\"img\" id=\"nav-pic\" src={user.pic}></img>\r\n            <div className=\"dropDown btn\" id=\"dropDown\" onClick={() => window.location.reload(false)}><p>Log Out</p></div>\r\n            </div>:<SignInButton/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React,{useState} from 'react'\r\nimport './style.css'\r\nimport SignInButton from '../Components/SignInButton'\r\nimport { useSelector } from 'react-redux'\r\nimport { db, storage } from '../Firebase';\r\nimport firebase from 'firebase';\r\n\r\nfunction randomString() {  \r\n            //define a variable consisting alphabets in small and capital letter  \r\n        var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz1234567890\";  \r\n            \r\n            //specify the length for the new string  \r\n        var lenString = 7;  \r\n        var randomstring = '';  \r\n\r\n            //loop to select a new character in each iteration  \r\n        for (var i=0; i<lenString; i++) {  \r\n        var rnum = Math.floor(Math.random() * characters.length);  \r\n        randomstring += characters.substring(rnum, rnum+1);  \r\n        } \r\n        return randomstring;\r\n} \r\n\r\nconst CreatePost = () => {\r\n    const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n    const user = useSelector(state => state.userReducer.user[0]);\r\n    const [caption, setCaption] = useState('');\r\n    const [img, setImg] = useState(null);\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    const handleImg=(e)=>{\r\n        setImg(e.target.files[0]);\r\n        let imgURL=URL.createObjectURL(e.target.files[0]);\r\n        let uploadedImg=document.getElementById(\"uploadedImg\");\r\n        uploadedImg.src=imgURL;\r\n        uploadedImg.style.display=\"block\";\r\n    }\r\n    const handleChange=(e)=>{\r\n        setCaption(e.target.value);\r\n    }\r\n    const handleUpload=()=>{\r\n        if(img){\r\n            var imgId=randomString();\r\n            const Upload=storage.ref(`Images/${imgId}.jpg`).put(img);\r\n\r\n            Upload.on(\"state_changed\",(snapshot)=>{\r\n                const pro=Math.round((snapshot.bytesTransferred/snapshot.totalBytes)*100);\r\n                setProgress(pro);\r\n            }\r\n            ,(error)=>{\r\n                console.log(error)\r\n            },\r\n            ()=>{\r\n                storage\r\n                .ref('Images')\r\n                .child(`${imgId}.jpg`)\r\n                .getDownloadURL()\r\n                .then((imgUrl)=>{\r\n                    db.collection(\"Posts\").add({\r\n                        Name:user.name,\r\n                        ProfileUrl:user.pic,\r\n                        Email:user.email,\r\n                        PhotoUrl:imgUrl,\r\n                        Caption:caption,\r\n                        createdAt: timestamp()\r\n                    });\r\n                });\r\n            });\r\n        }\r\n        setCaption('');\r\n        let uploadedImg=document.getElementById(\"uploadedImg\");\r\n        uploadedImg.style.display=\"none\";\r\n    }\r\n\r\n    \r\n\r\n    if(user){\r\n    return (\r\n        <div className='createPost'>\r\n            <div className='createPostUpload'>\r\n            <p>Create a post</p>\r\n            <textarea placeholder='Add a Caption...' id='createPostText' value={caption} onChange={handleChange}></textarea>\r\n            <div className=\"img\"><img alt=\"error\" id=\"uploadedImg\"></img></div>\r\n            <div id='btns'>\r\n            <label htmlFor='photoUpload' className=\"btn\" id='photoLabel'>Add Photo</label>\r\n            <input type='file' id=\"photoUpload\" onChange={handleImg}></input>\r\n            <button type=\"button\" className=\"btn\" onClick={handleUpload} id=\"upload\">UPLOAD</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    }else{\r\n        return (\r\n            <div className='createPostLogin'>\r\n                <SignInButton/>\r\n                <p>LogIn to create post</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreatePost\r\n","import React,{useState,useEffect} from 'react'\r\nimport './style.css'\r\nimport { db } from '../Firebase'\r\n\r\nconst Comments = (props) => {\r\n    const [comments, setComments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n   \r\n    \r\n\r\n     function getData (){db.collection(\"Posts\").doc(props.id).collection(\"Comments\").orderBy('createdAt', 'desc').onSnapshot(\r\n        querySnapshot => {\r\n            querySnapshot.forEach(doc => {\r\n                console.log(doc.id, \" => \", doc.data());\r\n                setComments(\r\n                    querySnapshot.docs.map((doc)=>({\r\n                        Name:doc.data().Name,\r\n                        Comment:doc.data().Comment,\r\n                        ProfileUrl:doc.data().ProfileUrl\r\n                    })     \r\n                    ))\r\n            });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='comments'>\r\n            {\r\n               comments.map((com)=>{\r\n                   return(\r\n                       <div className='eachComment'>\r\n                           <div id='comment'>\r\n                           <div id=\"commentOwner\">\r\n                               <img src={com.ProfileUrl}></img>\r\n                           </div>\r\n                           <div className=\"commentBody\">\r\n                                <p>{com.Name}</p>\r\n                                <p id=\"commentText\">{com.Comment}</p>\r\n                           </div>\r\n                           </div>\r\n                       </div>\r\n                   )\r\n               })\r\n           }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","import React, { useState } from 'react'\r\nimport { db } from '../Firebase';\r\nimport { useSelector } from 'react-redux'\r\nimport './style.css'\r\nimport firebase from 'firebase';\r\n\r\nconst CreateComment = (props) => {\r\n    const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n    const [comment, setComment] = useState('');\r\n    const user = useSelector(state => state.userReducer.user[0]);\r\n\r\n    const handleChange=(e)=>{\r\n        setComment(e.target.value);\r\n    }\r\n    const handleComment=()=>{\r\n        if(comment!==''){\r\n        db.collection(\"Posts\").doc(props.id).collection(\"Comments\").add({\r\n            Name:user.name,\r\n            ProfileUrl:user.pic,\r\n            Comment:comment,\r\n            createdAt: timestamp()\r\n        });\r\n        setComment('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"createComment\">\r\n            <textarea placeholder='Comment here...' id='createCommentText' value={comment} onChange={handleChange}></textarea>\r\n            <div id='btns'>\r\n            <button type=\"button\" style={{cursor:\"pointer\"}} onClick={handleComment} id=\"upload\">Comment</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateComment;\r\n","import React,{useState} from 'react'\r\nimport { db } from '../Firebase';\r\n\r\nconst UpdateCaption = (props) => {\r\n    const [caption, setCaption] = useState(props.caption);\r\n    const handleChange=(e)=>{\r\n        setCaption(e.target.value);\r\n    }\r\n    const handleUpdate=(id)=>{\r\n        db.collection(\"Posts\").doc(id).update({Caption: caption});\r\n    }\r\n    return (\r\n        <div className=\"updateCaption\">\r\n            <textarea placeholder='Add a Caption...' id='updateCaptionText' value={caption} onChange={handleChange}></textarea>\r\n            <button type=\"button\" className=\"update btn\" onClick={()=>handleUpdate(props.id)}>Update</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateCaption\r\n","import React,{useState,useEffect} from 'react'\r\nimport './style.css'\r\nimport { db } from '../Firebase'\r\nimport Comments from '../Components/Comments'\r\nimport CreateComment from '../Components/CreateComment'\r\nimport { useSelector } from 'react-redux'\r\nimport UpdateCaption from '../Components/UpdateCaption'\r\n\r\nconst Post = () => {\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n    const [posts, setPosts] = useState([]);\r\n    const user = useSelector(state => state.userReducer.user[0]);\r\n    \r\n    function getData(){db.collection(\"Posts\").orderBy('createdAt', 'desc').onSnapshot(\r\n        function (querySnapshot) {\r\n            setPosts(\r\n            querySnapshot.docs.map((doc)=>({\r\n                Name:doc.data().Name,\r\n                Caption:doc.data().Caption,\r\n                Email:doc.data().Email,\r\n                PhotoUrl:doc.data().PhotoUrl,\r\n                ProfileUrl:doc.data().ProfileUrl,\r\n                id:doc.id\r\n            })     \r\n            ))\r\n        }\r\n    )}\r\n\r\n    const deletePost=(id)=>{\r\n        db.collection(\"Posts\").doc(id).delete().then(() => {\r\n            console.log(\"Document successfully deleted!\");\r\n        }).catch((error) => {\r\n            console.error(\"Error removing document: \", error);\r\n        });\r\n    }\r\n\r\n    const [toggleUpdate, setToggleUpdate] = useState(false)\r\n\r\n    return (\r\n        <div>\r\n           {\r\n               posts.map((post)=>{\r\n                   return(\r\n                       <div className='eachPost'>\r\n                           <div id='post'>\r\n                           <div id=\"postHead\">\r\n                               <div className='postHead'>\r\n                               <img src={post.ProfileUrl}></img>\r\n                               <p>{post.Name}</p>\r\n                               </div>\r\n                               {\r\n                                   (user)?(user.email===post.Email)?<button type='button' id='deleteBtn' className=\"btn\" onClick={()=>deletePost(post.id)}>Delete</button>:<></>:<></> \r\n                               }\r\n                               \r\n                           </div>\r\n                           <div className=\"postBody\">\r\n                               <div id='captionBody'><p>{post.Caption}</p> \r\n                               {\r\n                                   (user)?(user.email===post.Email)?<button type=\"button\" id=\"editBtn\" className=\"btn\" onClick={()=>{(toggleUpdate)?setToggleUpdate(false):setToggleUpdate(true)}}>Edit</button>:<></>:<></>\r\n                               }\r\n                               </div>\r\n                               {\r\n                                    (user)?(user.email===post.Email)?toggleUpdate?<UpdateCaption id={post.id} caption={post.Caption}/>:<></>:<></>:<></>\r\n                               } \r\n                                <img src={post.PhotoUrl}></img>\r\n                           </div>\r\n                           {(user)?<CreateComment id={post.id}/>:<></>}\r\n                           <Comments id={post.id}/>\r\n                           </div>\r\n                       </div>\r\n                   )\r\n               })\r\n           }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport './style.css'\r\nimport Navbar from '../Containers/Navbar'\r\nimport CreatePost from '../Containers/CreatePost';\r\nimport Post from '../Containers/Post';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"home\">\r\n            <Navbar/>\r\n            <CreatePost/>\r\n            <Post/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import Home from './Pages/Home'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>   \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initial={\r\n    user:[]\r\n}\r\n\r\nfunction userReducer(state=initial,action)\r\n{\r\n    switch(action.type){\r\n        case 'ADD':\r\n            return{\r\n            ...state,\r\n            user:[\r\n                ...state.user,action.Payload\r\n            ]\r\n        }\r\n        default :\r\n           return state;\r\n    }\r\n}\r\nexport default userReducer;","\r\nimport  userReducer  from \"./userReducer\";\r\n\r\nimport {combineReducers} from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    userReducer\r\n})\r\n\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./Reducers/Index\";\r\n\r\nconst store=createStore(rootReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './Store'\nimport {Provider} from 'react-redux'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <Provider store={store}>\n      <App />\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}